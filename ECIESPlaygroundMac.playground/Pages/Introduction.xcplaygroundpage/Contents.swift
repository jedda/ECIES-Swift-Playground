
/*:
 
 ## ECIES Swift Playgound
 
 This playground is designed to explain some of the processes around ECIES encryption on Apple platforms and potential cross-platform portability of both keys and ciphertext.
 
 I've also written a little more about this topic here:
 [https://jedda.me/cross-platform-encryption-with-apples-secure-enclave/](https://jedda.me/cross-platform-encryption-with-apples-secure-enclave/)
 
 There are two examples:
 
 - [Encrypt](Encrypt) - in which we take a public key and a plaintext string and use a specific algorithm to encrypt it to ciphertext
 - [Decrypt](Decrypt) - in which we take the paired private key and ciphertext and use a specific algorithm to decrypt it to plaintext
 
 In an effort to keep them as portable and cross-platform as possible, a choice has been made to use keys generated by OpenSSL and represented as PEM, and then to encode and display ciphertext using Base64. This should allow you to copy and paste these between examples as well as the [cross-platform Go example here](https://github.com/jedda/ecies-go-example).
 
 If you were specifically encrypting for the Secure Enclave, you could skip all the PEM nonsense in Swift and simply report public key representations back in their raw bytes.
 
 ## Keys
 
 For these examples, i've included a pre-generated keypair that is consistent betweeen the [Encrypt](Encrypt) and  [Decrypt](Decrypt) examples. This pre-generated key is a P-256 curve key that is of the same type and characteristics that could be protected by the Secure Enclave.
 
 If you'd like to create your own key pair, you can use the commands below to do so. If you'd like to experiment with larger key sizes, you can use `secp384r1` and `secp521r1` in place of `secp256r1`.
 
 
 `openssl ecparam -name secp256r1 -genkey -noout -out private-key.pem`
 
 `openssl ec -in private-key.pem -pubout -out public-key.pem`
 
 ## Questions? Feedback?
 
 [Feel free to reach out](https://jedda.me/about/) or [create an issue](https://github.com/jedda/ecies-swift-playground/issues) on GitHub.
 
 ## Licence
 
 This playground and code is CC0 licenced and is dedicated to the public domain.
 
 ****
 [Next](@next)
 */
